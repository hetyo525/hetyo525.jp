---
import type * as interfaces from '@/lib/interfaces.ts';
import { snakeToKebab } from '@/lib/style-helpers.ts';
import '../../styles/notion-color.css';
import NotionBlocks from '../NotionBlocks.astro';
import RichText from './RichText.astro';

export interface Props {
  block: interfaces.List;
  headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
const listItems = block.ListItems.filter(
  (b): b is SomeRequired<interfaces.Block, 'BulletedListItem'> => !!b.BulletedListItem,
);
---

<ul>
  {
    listItems.map((b) => (
      <li class={snakeToKebab(b.BulletedListItem.Color)}>
        {b.BulletedListItem.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
        {b.HasChildren && <NotionBlocks blocks={b.BulletedListItem.Children} headings={headings} />}
      </li>
    ))
  }
</ul>

<style>
  ul {
    font-size: 1rem;
  }
</style>
