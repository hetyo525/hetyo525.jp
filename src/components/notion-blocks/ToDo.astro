---
import type * as interfaces from '@/lib/interfaces.ts';
import { snakeToKebab } from '@/lib/style-helpers.ts';
import '../../styles/notion-color.css';
import NotionBlocks from '../NotionBlocks.astro';
import RichText from './RichText.astro';

export interface Props {
  block: interfaces.List;
  headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
---

<div class="to-do">
  {
    block.ListItems.filter((b) => b.Type === 'to_do').map((b) => (
      <div class={snakeToKebab(b.ToDo?.Color ?? '')}>
        <input type="checkbox" checked={b.ToDo?.Checked} disabled />
        {b.ToDo?.RichTexts.map((richText) => {
          if (b.ToDo?.Checked) {
            return (
              <s>
                <RichText richText={richText} />
              </s>
            );
          }
          return <RichText richText={richText} />;
        })}
        {b.HasChildren && <NotionBlocks blocks={b.ToDo?.Children} headings={headings} />}
      </div>
    ))
  }
</div>

<style>
  .to-do {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
    padding-inline-start: 1rem;
  }
  .to-do > div {
  }
  .to-do > div > input {
  }
  .to-do > div > s {
    color: var(--accents-3);
  }
</style>
