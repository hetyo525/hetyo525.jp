---
import { buildHeadingId } from '@/lib/blog-helpers.ts';
import type * as interfaces from '@/lib/interfaces.ts';
import NotionBlocks from '../NotionBlocks.astro';
import RichText from './RichText.astro';

export interface Props {
  block: interfaces.Block;
  headings: interfaces.Block[];
}

const { block, headings } = Astro.props;
const heading2 = block.Heading2;
const id = heading2 ? buildHeadingId(heading2) : undefined;
---

{
  heading2 &&
    (heading2.IsToggleable ? (
      <details class="toggle">
        <summary>
          <a href={`#${id}`} id={id}>
            <h4>
              {heading2.RichTexts.map((richText: interfaces.RichText) => (
                <RichText richText={richText} />
              ))}
            </h4>
          </a>
        </summary>
        <div>{heading2.Children && <NotionBlocks blocks={heading2.Children} headings={headings} />}</div>
      </details>
    ) : (
      <a href={`#${id}`} id={id}>
        <h4>
          {heading2.RichTexts.map((richText: interfaces.RichText) => (
            <RichText richText={richText} />
          ))}
        </h4>
      </a>
    ))
}

<style>
  h4 {
    margin: 1em 0 0.3em;
    color: var(--fg);
    font-size: 1.5rem;
  }
  @media (max-width: 640px) {
    h4 {
      font-size: 1.2rem;
    }
  }

  .toggle {
    margin: 1.6rem 0 0;
  }
  @media (max-width: 640px) {
    .toggle {
      margin: 1.2rem 0 0;
    }
  }

  .toggle > summary {
    cursor: pointer;
  }

  .toggle > summary > a {
    display: inline;
  }

  .toggle > summary > a > h4 {
    display: inline;
  }

  .toggle > div {
    margin-left: 1em;
  }
</style>
